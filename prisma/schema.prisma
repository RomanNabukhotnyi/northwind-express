// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Region {
  id          Int         @id @default(autoincrement())
  description String      @db.VarChar(50)
  Territories Territory[]
}

model Territory {
  id                  String              @id @db.VarChar(20)
  description         String              @db.VarChar(50)
  region              Region              @relation(fields: [regionId], references: [id])
  regionId            Int
  EmployeeTerritories EmployeeTerritory[]
}

model Employee {
  id                  Int                 @id @default(autoincrement())
  lastName            String              @db.VarChar(20)
  firstName           String              @db.VarChar(10)
  title               String?             @db.VarChar(30)
  titleOfCortesy      String?             @db.VarChar(25)
  birthDate           DateTime?
  hireDate            DateTime?
  address             String?             @db.VarChar(60)
  city                String?             @db.VarChar(15)
  region              String?             @db.VarChar(15)
  postalCode          String?             @db.VarChar(10)
  country             String?             @db.VarChar(15)
  homePhone           String?             @db.VarChar(24)
  extension           String?             @db.VarChar(4)
  photo               Bytes?              @db.Blob
  notes               String?             @db.Text
  employee            Employee?           @relation("EmployeeReportsTo", fields: [reportsTo], references: [id])
  reportsTo           Int?
  photoPath           String?             @db.VarChar(255)
  EmployeeTerritories EmployeeTerritory[]
  Orders              Order[]
  Employees            Employee[]          @relation("EmployeeReportsTo")
}

model EmployeeTerritory {
  employee    Employee  @relation(fields: [employeeId], references: [id])
  employeeId  Int
  territory   Territory @relation(fields: [territoryId], references: [id])
  territoryId String    @db.VarChar(20)

  @@id([employeeId, territoryId])
}

model Supplier {
  id           Int       @id @default(autoincrement())
  companyName  String    @db.VarChar(40)
  contactName  String?   @db.VarChar(30)
  contactTitle String?   @db.VarChar(30)
  address      String?   @db.VarChar(60)
  city         String?   @db.VarChar(15)
  region       String?   @db.VarChar(15)
  postalCode   String?   @db.VarChar(10)
  country      String?   @db.VarChar(15)
  phone        String?   @db.VarChar(24)
  fax          String?   @db.VarChar(24)
  homePage     String?   @db.Text
  Products     Product[]
}

model Product {
  id              Int           @id @default(autoincrement())
  productName     String        @db.VarChar(40)
  supplier        Supplier?     @relation(fields: [supplierId], references: [id])
  supplierId      Int?
  category        Category?     @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  quantityPerUnit String?       @db.VarChar(20)
  unitPrice       Float?
  unitsInStock    Int?
  unitsOnOrder    Int?
  reorderLevel    Int?
  discontinued    Int           @db.TinyInt()
  orderDetails    OrderDetail[]
}

model Category {
  id           Int       @id @default(autoincrement())
  categoryName String    @db.VarChar(15)
  description  String?   @db.Text
  picture      Bytes?    @db.Blob
  Products     Product[]
}

model Customer {
  id           String  @id @db.VarChar(5)
  companyName  String  @db.VarChar(40)
  contactName  String? @db.VarChar(30)
  contactTitle String? @db.VarChar(30)
  address      String? @db.VarChar(60)
  city         String? @db.VarChar(15)
  region       String? @db.VarChar(15)
  postalCode   String? @db.VarChar(10)
  country      String? @db.VarChar(15)
  phone        String? @db.VarChar(24)
  fax          String? @db.VarChar(24)
  Orders       Order[]
}

model Order {
  id             Int           @id @default(autoincrement())
  customer       Customer?     @relation(fields: [customerId], references: [id])
  customerId     String?       @db.VarChar(5)
  employee       Employee?     @relation(fields: [employeeId], references: [id])
  employeeId     Int?
  orderDate      DateTime?
  requiredDate   DateTime?
  shippedDate    DateTime?
  shipper        Shipper?      @relation(fields: [shipVia], references: [id])
  shipVia        Int?
  freight        Float?
  shipName       String?       @db.VarChar(40)
  shipAddress    String?       @db.VarChar(60)
  shipCity       String?       @db.VarChar(15)
  shipRegion     String?       @db.VarChar(15)
  shipPostalCode String?       @db.VarChar(10)
  shipCountry    String?       @db.VarChar(15)
  OrderDetails   OrderDetail[]
}

model OrderDetail {
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  unitPrice Float
  quantity  Int
  discount  Float

  @@id([orderId, productId])
}

model Shipper {
  id          Int     @id @default(autoincrement())
  companyName String  @db.VarChar(40)
  phone       String? @db.VarChar(24)
  Orders      Order[]
}
